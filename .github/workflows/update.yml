name: "Update"

on:
  schedule:
    - cron: '8 */8 * * *' # At minute 8 past every 8th hour

jobs:
  updater:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download IPs
        run: |
          bash google/downloader.sh
          bash amazon/downloader.sh
          bash microsoft/downloader.sh
          bash oracle/downloader.sh
          bash digitalocean/downloader.sh

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('utils/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -r utils/requirements.txt

      - name: Merge Ranges
        run: |
          set -euo pipefail
          # ipv4
          python utils/merge.py --source=google/ipv4.txt | sort -h > google/ipv4_merged.txt
          python utils/merge.py --source=amazon/ipv4.txt | sort -h > amazon/ipv4_merged.txt
          python utils/merge.py --source=microsoft/ipv4.txt | sort -h > microsoft/ipv4_merged.txt
          python utils/merge.py --source=oracle/ipv4.txt | sort -h > oracle/ipv4_merged.txt
          python utils/merge.py --source=digitalocean/ipv4.txt | sort -h > digitalocean/ipv4_merged.txt
          # ipv6
          python utils/merge.py --source=google/ipv6.txt | sort -h > google/ipv6_merged.txt
          python utils/merge.py --source=amazon/ipv6.txt | sort -h > amazon/ipv6_merged.txt
          python utils/merge.py --source=microsoft/ipv6.txt | sort -h > microsoft/ipv6_merged.txt
          # oracle not provide ipv6
          python utils/merge.py --source=digitalocean/ipv6.txt | sort -h > digitalocean/ipv6_merged.txt

      - name: Commit files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          # Get name & email from 1st commit
          git config --local user.email "$(git log --format='%ae' --reverse | head -1)"
          git config --local user.name "$(git log --format='%an' --reverse | head -1)"

          # try commit
          git add .
          if [ -z "$(git status --porcelain)" ]; then
            echo 'No changes'
            exit 0
          fi
          git commit -m "Auto-update ip ranges"

          # push changes
          git remote add github "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git pull github ${GITHUB_REF} --ff-only
          git push github HEAD:${GITHUB_REF}
